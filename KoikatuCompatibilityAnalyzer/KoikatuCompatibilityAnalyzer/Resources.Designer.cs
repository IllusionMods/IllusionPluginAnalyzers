//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KoikatuCompatibilityAnalyzer {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KoikatuCompatibilityAnalyzer.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type names should be all uppercase..
        /// </summary>
        internal static string AnalyzerDescription {
            get {
                return ResourceManager.GetString("AnalyzerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type name &apos;{0}&apos; contains lowercase letters.
        /// </summary>
        internal static string AnalyzerMessageFormat {
            get {
                return ResourceManager.GetString("AnalyzerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type name contains lowercase letters.
        /// </summary>
        internal static string AnalyzerTitle {
            get {
                return ResourceManager.GetString("AnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ActionGame.H.OpenHData.Data.isDarkness
        ///ActionGame.Point.ActionPoint.executable
        ///ActionGame.Point.ActionPoint.EventADVStart
        ///ActionGame.Point.ActionPoint.EventADVStart
        ///ActionGame.Point.ActionPoint.Type.ダークネス
        ///ChaControl.Initialize
        ///ChaControl.LoadPreset
        ///ChaControl.DrawOption
        ///ChaControl.DrawSode
        ///ChaControl.ChangeShakeAccessory
        ///ChaControl.IsEmblem
        ///ChaControl.IsEmblem
        ///ChaControl.ChangeCustomEmblem
        ///ChaControl.ChangeTexture
        ///ChaControl.ChangeTexture
        ///ChaControl.GetTexture
        ///ChaControl.ChangeShakeHair
        ///Cha [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string asMissingMembers {
            get {
                return ResourceManager.GetString("asMissingMembers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ShapeBodyInfoFemale.CorrectKeyName
        ///ShapeHandInfo
        ///ShapeHandInfo.DstName
        ///ShapeHandInfo.SrcName
        ///FreeHScene.DarkPersonal
        ///H3PDarkHoushi
        ///H3PDarkSonyu
        ///HSprite.Houshi3PDarkSprite
        ///HSprite.Sonyu3PDarkSprite
        ///PlusTransform
        ///HTest3PDarkHoushi
        ///HTest3PDarkSonyu
        ///.
        /// </summary>
        internal static string asMissingTypes {
            get {
                return ResourceManager.GetString("asMissingTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ADV.Commands.Base.Choice.ChoiceData..ctor
        ///ActionGame.Communication.Info.LoadEventBundlePath
        ///Manager.Communication.GetEventBundleFilePath
        ///ActionGame.Cycle.wakeUpWeekdayWords
        ///ActionGame.Cycle.wakeUpHolidayWords
        ///ActionGame.Cycle.wakeUpDateWords
        ///ActionGame.Cycle.wakeUpSaturdayWords
        ///ActionGame.H.OpenHData.Data.isDarkness
        ///ActionGame.Point.ActionPoint.wakeUpWords
        ///ActionGame.Point.ActionPoint.executable
        ///ActionGame.Point.ActionPoint.EventADVStart
        ///ActionGame.Point.ActionPoint.EventADVStart
        ///ActionGame.Poin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string kkpMissingMembers {
            get {
                return ResourceManager.GetString("kkpMissingMembers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ShapeBodyInfoFemale.CorrectKeyName
        ///ShapeHandInfo
        ///ShapeHandInfo.DstName
        ///ShapeHandInfo.SrcName
        ///CharaFiles.ChaFileInfo.State
        ///CharaFiles.ChaFileListCtrl.OnChangeItemFunc
        ///StaffRoom.FileInfo.State
        ///ActionGame.ClassRoomCharaFile
        ///ActionGame.ClassRoomFileListCtrl
        ///ActionGame.PreviewDataComponent
        ///ChaCustom.CustomFileInfo.State
        ///ChaCustom.CustomFileListCtrl.OnChangeItemFunc
        ///FreeH.FreeHClassRoomCharaFile
        ///FreeHScene.DarkPersonal
        ///H3PDarkHoushi
        ///H3PDarkSonyu
        ///HSprite.Houshi3PDarkSprite
        ///HSprite.Sonyu3PDarkSprit [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string kkpMissingTypes {
            get {
                return ResourceManager.GetString("kkpMissingTypes", resourceCulture);
            }
        }
    }
}
